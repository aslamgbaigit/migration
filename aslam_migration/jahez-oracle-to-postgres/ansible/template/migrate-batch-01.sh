# read target environment to set the conf file
if [ "$1" = "" ]; then
  echo "You must specify environment: test or prod"
  exit
else
  environment=$1
  ora2pgConfFile="conf/${environment}_ora2pg.conf"
fi

# check if conf file exist
if [ ! -f $ora2pgConfFile ]; then
    echo "$ora2pgConfFile not found. Exiting..."
    exit
fi

echo "Using config file: $ora2pgConfFile"

run_ora2pg() {
  t="small-tables"
  echo "$(date) - starting migrating $t"
  start=$SECONDS
  echo $(date) > logs/migrate-$t.log
  oraTempDir=$(mktemp -d -p /tmp/ora2o-custom/)
  ora2pg --temp_dir $oraTempDir --jobs 10 --type COPY --limit 50000 --parallel 10 \
    --allow USER_CREDIT_CARDS,DISPATCH,PENDING_PACKAGE_COMPONENT,PACKAGE_COMPONENT,MENU_ITEM_OPTION_MAP,ORDER_NOTES,ORDER_LINE_ITEM_MC,COUPON_SERVICE,PENDING_BRANCH_TIMINGS,BRANCH_TIMINGS,DRIVER,MENU_ITEM_VARIANT_TYPE,HYPERPAY_TOKEN_MIGRATION,CITY_OPEN_CLOSE_HISTORY,APP_USER_20170721,PENDING_MENU_ITEM_CHOICE,JAHEZ_CLIENTS_BLACK_LIST,MENU_ITEM_CATEGORY,MENU_ITEM_CHOICE,APP_USER_2017_06_03,ITEM_SIZE,JZ_CITY_REQUEST,APP_USER_OTP_HISTORY,RATING,ADDRESS_BAK,RESTAURANT_ORDER_BAK,JZ_DELIVRY_TIERS_TEMP,PENDING_BRANCH,BRANCH,MENU_ITEM_CATEGORY_TMP,JZ_DELIVRY_TIERS_TEMP_2,PENDING_BRANCH_TIMING,BRANCH_TIMING,GENERIC_OFFER_RESTAURANT_CITY,JZ_DELIVRY_TIERS,APP_USER_BAK,MENU_ITEM_AVAILABILITY,RESTAURANT_ON_TOP_HISTORY,PENDING_RESTAURANT_CUISINE,RESTAURANT_CUISINE,CHOICE,GENERIC_OFFER_RESTAURANT_NEW,DRIVER_BACKUP,TMP_DRIVER_DETAIL,PENDING_RESTAURANT,RESTAURANT,RESTAURANT_CHARGE,MENU_COMBO_ITEM,HUAWEI_USER_WALLET,PENDING_B_T_26_6_2017,BRANCH_TIMING_20170627,RESTAURANT_MASTER,JZ_PAYMENT_TRANSACTIONS,COK_FIX,CO_KITCHEN_BRANCH_MAPPING,OTHAIM_ITEM_ID_ASLAM,APP_USER_DELETED,FAVORITE_BAK,AVAILABILITY,TEMP_USER_NAME,APP_USER_MIGRATION_MAP,CREATE_DELIVERY_OFFER_TMP,JZ_BLOBS,DELIVERY_OFFER_TEMP,MENU_COMBO,JZ_USER_HISTORY_BAK,JZ_USER_HISTORY,SERVICE_CHARGE_TEMP,MDRT_1676E$,RATING_BAK,RESTAURANT_CITY_DISPLAY_ORDER,DELIVERY_SERVICE,RESTAURANT_BANK_DETAIL,JZ_CITY_SERVICE_HOURS,APP_USER_OTP,PENDING_BRANCH_SCHDULE_TIMINGS,BRANCH_SCHEDULE_TIMINGS,DELIVERY_PRICE,AREA,CITY_TEMPS,COUNTRY,APP_USER_MIGRATION_MAP2,APP_USER_MIGRATION_MAP2_HOLDER,INTEGRATION_OAUTH_CLIENT_TOKEN,APP_USER_JAYPAY_HISTORY,ACT_REASONS,SERVICE_DELIVERY_MASTER,TIME_PERIOD_OFFER,GENERIC_OFFER,GENERIC_OFFER_DATE,CHILD_NAVIGATIONS,SHAWARMER_FOOD_HID,QRTZ_JOB_DETAILS,CUISINE,CITY,JZ_CUSTOMERS_DELETED,USER_TYPE,ACCOUNT_TRANSACTION_RULES,BANK_LOOKUP,GENERIC_OFFER_TIME_PERIOD,CONTENT_TYPE,JZ_DELIVERY_GROUP_TIERS,ORGANIZATION_DRIVER_MANAGER,PENDING_OFFER_FREEBIE,OFFER_FREEBIE,OFFER,PARENT_NAVIGATIONS,PENDING_OFFER,GENERIC_OFFER_CORPORATE_CITY,ORDER_STATUS,JZ_CONFIG,JZ_ORDER_PAYMENT_TX_20170616,JZ_SERVICE_HOURS,ORDER_STAGE,MASTER_MENU_CLASS,RESTAURANT_TYPE,REQUEST_SOURCE,GENERIC_OFFER_CORPORATE,RAMADAN_RESTAURANT,OFFER_TYPE,GENERIC_OFFER_TYPE,USER_PRIVILEGE,MASTER_DATA_STATUS,TAG,MARK,COMBO_TYPE,JZ_EXCEPTION_MESSAGES,OS_TYPE,JZ_DELIVERY_GROUP,SERVICE_CHARGE_TYPE,DELIVERY_TYPE,COMPANY,BRANCH_TAG,DUMMY,DELIVERY_SERVICE_TYPE,QRTZ_LOCKS,VAT_TEMP,VAT_HISTORY,CLIENTDETAILS,OAUTH_CODE,VISIT,PAYFORT_RESPONSE_FEEDBACK,GENERIC_OFFER_MENU_COMBO,GENERIC_OFFER_USER,GENERIC_OFFER_CORPORATE_REST,RESTAURANT_FOODICS_MENU,JZ_FOOD_RATING,JZ_OFFER_TIME_RECURRENCE,MENU_RATING,ORDER_OFFER_LINE_ITEM_DETAIL,PENDING_CHOICE,JZ_WHT_BLK_BWN_LIST,JZ_MAPPED_FOODICS_MENU,JZ_FOODICS_MENU,OAUTH_CLIENT_DETAILS,QRTZ_PAUSED_TRIGGER_GRPS,RESTAURANT_TAG,GENERIC_OFFER_MENU_ITEM,OAUTH_APPROVALS,RESTAURANT_FOODICS_MAPPING,JZ_CREDIT_CARDS,JZ_DRIVER_RATING,JZ_SERVICE_RATING,JZ_OFFER_MENU_ITEMS,ORDER_OFFER_LINE_ITEM,ALERT_EVENT,PENDING_MENU_ITEM_CATEGORY,PENDING_ITEM_SIZE,PENDING_MENU_ITEM_VARIANT_TYPE,PENDING_OFFER_TYPE,JZ_OFFER,JZ_MENU_CHOICES_MAPPING,JZ_MENU_OPTIONS_MAPPING,JZ_MENU_SIZE_MAPPING,OAUTH_REFRESH_TOKEN,OAUTH_CLIENT_TOKEN,QRTZ_TRIGGERS,QRTZ_SIMPLE_TRIGGERS,QRTZ_CRON_TRIGGERS,QRTZ_SIMPROP_TRIGGERS,QRTZ_BLOB_TRIGGERS,QRTZ_CALENDARS,QRTZ_FIRED_TRIGGERS,QRTZ_SCHEDULER_STATE \
    --conf $ora2pgConfFile >> logs/migrate-$t.log 2>&1
  retVal=$?
  if [ $retVal -ne 0 ]; then
      echo "exited with error for $t: code is $retVal"
      echo "Ora2pg command exited with error: code $retVal" >> logs/migrate-$t.log
      echo "$t,-1" >> timings.csv
  else
      echo $(date) >> logs/migrate-$t.log
      end=$SECONDS
      echo "$t,$((end-start))" >> timings.csv
      echo "$(date) - finished migrating $t in $((end-start)) seconds"
  fi
}

run_ora2pg
